import * as React from 'react';
import { MeshReflectorMaterialImpl } from '../materials/MeshReflectorMaterial';
export declare type ReflectorChildProps = MeshReflectorMaterialImpl;
export declare type ReflectorProps = Omit<JSX.IntrinsicElements['mesh'], 'args' | 'children'> & {
    resolution?: number;
    mixBlur?: number;
    mixStrength?: number;
    blur?: [number, number] | number;
    args?: [number, number];
    mirror: number;
    minDepthThreshold?: number;
    maxDepthThreshold?: number;
    depthScale?: number;
    children: {
        (Component: React.ElementType<JSX.IntrinsicElements['meshReflectorMaterial']>, ComponentProps: ReflectorChildProps): JSX.Element | null;
    };
};
declare global {
    namespace JSX {
        interface IntrinsicElements {
            meshReflectorMaterial: MeshReflectorMaterialImpl;
        }
    }
}
export declare function Reflector({ mixBlur, mixStrength, resolution, blur, args, minDepthThreshold, maxDepthThreshold, depthScale, mirror, children, ...props }: ReflectorProps): JSX.Element;
