{"version":3,"file":"index.modern.js","sources":["../src/custom-properties.ts","../src/index.tsx"],"sourcesContent":["import { css, get, Theme } from '@theme-ui/css'\n\nconst toVarName = (key: string) => `--theme-ui-${key}`\nconst toVarValue = (key: string, value: string | number) =>\n  `var(${toVarName(key)}, ${value})`\n\nconst join = (...args: (string | undefined)[]) => args.filter(Boolean).join('-')\n\nconst numberScales = {\n  fontWeights: true,\n  lineHeights: true,\n}\nconst reservedKeys = {\n  useCustomProperties: true,\n  initialColorModeName: true,\n  printColorModeName: true,\n  initialColorMode: true,\n  useLocalStorage: true,\n}\n\nconst toPixel = (key: string, value: string | number) => {\n  if (typeof value !== 'number') return value\n  if (numberScales[key as keyof typeof numberScales]) return value\n  return value + 'px'\n}\n\n// convert theme values to custom properties\nexport const toCustomProperties = (\n  obj: Record<string, any> | undefined,\n  parent?: string,\n  themeKey?: string\n) => {\n  const next: Record<string, any> = Array.isArray(obj) ? [] : {}\n\n  for (let key in obj) {\n    const value = obj[key]\n    const name = join(parent, key)\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name, key)\n      continue\n    }\n    if (reservedKeys[key as keyof typeof reservedKeys]) {\n      next[key] = value\n      continue\n    }\n    const val = toPixel(themeKey || key, value)\n    next[key] = toVarValue(name, val)\n  }\n\n  return next\n}\n\nexport const objectToVars = (parent: string, obj: Record<string, any>) => {\n  let vars: Record<string, object> = {}\n  for (let key in obj) {\n    if (key === 'modes') continue\n    const name = join(parent, key)\n    const value = obj[key]\n    if (value && typeof value === 'object') {\n      vars = {\n        ...vars,\n        ...objectToVars(name, value),\n      }\n    } else {\n      vars[toVarName(name)] = value\n    }\n  }\n  return vars\n}\n\n// create body styles for color modes\nexport const createColorStyles = (theme: Theme = {}) => {\n  if (!theme.colors || theme.useBodyStyles === false) return {}\n  if (theme.useCustomProperties === false || !theme.colors.modes) {\n    return css({\n      body: {\n        color: 'text',\n        bg: 'background',\n      },\n    })(theme)\n  }\n  const { colors, initialColorModeName, printColorModeName } = theme\n  const modes = colors.modes || {}\n  const styles = objectToVars('colors', colors)\n\n  Object.keys(modes).forEach((mode) => {\n    const key = `&.theme-ui-${mode}`\n    styles[key] = objectToVars('colors', modes[mode])\n  })\n  if (printColorModeName) {\n    const mode =\n      printColorModeName === 'initial' ||\n      printColorModeName === initialColorModeName\n        ? colors\n        : modes[printColorModeName]\n    styles['@media print'] = objectToVars('colors', mode)\n  }\n  const colorToVarValue = (color: string) =>\n    toVarValue(`colors-${color}`, get(theme, `colors.${color}`))\n\n  return css({\n    body: {\n      ...styles,\n      color: colorToVarValue('text'),\n      bg: colorToVarValue('background'),\n    },\n  })(theme)\n}\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { jsx, useThemeUI, merge, Context } from '@theme-ui/core'\nimport { get, Theme } from '@theme-ui/css'\nimport { Global, ThemeContext as EmotionContext } from '@emotion/react'\nimport { toCustomProperties, createColorStyles } from './custom-properties'\n\nconst STORAGE_KEY = 'theme-ui-color-mode'\n\ndeclare module '@theme-ui/core' {\n  export interface ContextValue {\n    colorMode?: string\n    setColorMode?: (colorMode: SetStateAction<string>) => void\n  }\n}\n\nconst storage = {\n  get: (init?: string) => {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY) || init\n    } catch (e) {\n      console.warn(\n        'localStorage is disabled and color mode might not work as expected.',\n        'Please check your Site Settings.',\n        e\n      )\n    }\n  },\n  set: (value: string) => {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value)\n    } catch (e) {\n      console.warn(\n        'localStorage is disabled and color mode might not work as expected.',\n        'Please check your Site Settings.',\n        e\n      )\n    }\n  },\n}\n\nconst getPreferredColorScheme = (): 'dark' | 'light' | null => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      return 'dark'\n    }\n    if (window.matchMedia('(prefers-color-scheme: light)').matches) {\n      return 'light'\n    }\n  }\n  return null\n}\n\nconst useColorModeState = (theme: Theme = {}) => {\n  const [mode, setMode] = React.useState(() => {\n    const preferredMode =\n      theme.useColorSchemeMediaQuery !== false && getPreferredColorScheme()\n\n    return preferredMode || theme.initialColorModeName || 'default'\n  })\n\n  // read color mode from local storage\n  React.useEffect(() => {\n    const stored = theme.useLocalStorage !== false && storage.get()\n    document.body.classList.remove('theme-ui-' + stored)\n\n    if (stored && stored !== mode) {\n      setMode(stored)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (mode && theme.useLocalStorage !== false) {\n      storage.set(mode)\n    }\n  }, [mode])\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (\n      theme.colors &&\n      theme.colors.modes &&\n      theme.initialColorModeName &&\n      Object.keys(theme.colors.modes).indexOf(theme.initialColorModeName) > -1\n    ) {\n      console.warn(\n        'The `initialColorModeName` value should be a unique name' +\n          ' and cannot reference a key in `theme.colors.modes`.'\n      )\n    }\n  }\n\n  return [mode, setMode] as const\n}\n\nexport function useColorMode<T extends string = string>(): [\n  T,\n  Dispatch<SetStateAction<T>>\n] {\n  const { colorMode, setColorMode } = useThemeUI()\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(`[useColorMode] requires the ColorModeProvider component`)\n  }\n\n  // We're allowing the user to specify a narrower type for its color mode name.\n  return ([colorMode, setColorMode] as unknown) as [\n    T,\n    Dispatch<SetStateAction<T>>\n  ]\n}\n\nconst applyColorMode = (theme: Theme, mode: string): Theme => {\n  if (!mode) return theme\n  const modes = get(theme, 'colors.modes', {})\n  return merge.all({}, theme, {\n    colors: get(modes, mode, {}),\n  })\n}\n\nconst BodyStyles = ({ theme }: { theme: Theme }) =>\n  jsx(Global, {\n    styles: () => {\n      return createColorStyles(theme)\n    },\n  })\n\nexport const ColorModeProvider: React.FC = ({ children }) => {\n  const outer = useThemeUI()\n  const [colorMode, setColorMode] = useColorModeState(outer.theme)\n  const theme = applyColorMode(outer.theme || {}, colorMode)\n  const emotionTheme = { ...theme }\n\n  if (theme.useCustomProperties !== false) {\n    emotionTheme.colors = toCustomProperties(emotionTheme.colors, 'colors')\n  }\n\n  const context = {\n    ...outer,\n    theme,\n    colorMode,\n    setColorMode,\n  }\n\n  return jsx(\n    EmotionContext.Provider,\n    { value: emotionTheme },\n    jsx(\n      Context.Provider,\n      { value: context },\n      jsx(BodyStyles, { key: 'color-mode', theme }),\n      children\n    )\n  )\n}\n\nconst noflash = `(function() { try {\n  var mode = localStorage.getItem('theme-ui-color-mode');\n  if (!mode) return\n  document.body.classList.add('theme-ui-' + mode);\n} catch (e) {} })();`\n\nexport const InitializeColorMode = () =>\n  jsx('script', {\n    key: 'theme-ui-no-flash',\n    dangerouslySetInnerHTML: {\n      __html: noflash,\n    },\n  })\n"],"names":["toVarName","key","toVarValue","value","join","args","filter","Boolean","numberScales","fontWeights","lineHeights","reservedKeys","useCustomProperties","initialColorModeName","printColorModeName","initialColorMode","useLocalStorage","toPixel","toCustomProperties","obj","parent","themeKey","next","Array","isArray","name","val","objectToVars","vars","createColorStyles","theme","colors","useBodyStyles","modes","css","body","color","bg","styles","Object","keys","forEach","mode","colorToVarValue","get","STORAGE_KEY","storage","init","window","localStorage","getItem","e","console","warn","set","setItem","getPreferredColorScheme","matchMedia","matches","useColorModeState","setMode","React","useState","preferredMode","useColorSchemeMediaQuery","useEffect","stored","document","classList","remove","process","env","NODE_ENV","indexOf","useColorMode","colorMode","setColorMode","useThemeUI","Error","applyColorMode","merge","all","BodyStyles","jsx","Global","ColorModeProvider","children","outer","emotionTheme","context","EmotionContext","Provider","Context","noflash","InitializeColorMode","dangerouslySetInnerHTML","__html"],"mappings":"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"}