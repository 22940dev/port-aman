export declare type GatsbyNodePluginArgs = {
    files: GatsbyNode[];
    markdownNode: GatsbyNode;
    markdownAST: any;
    getNode: (id: string) => GatsbyNode | undefined;
};
export declare type PluginOptions = {
    staticFolderName: string;
};
export declare type FrontMatterOptions = {
    staticFolderName: string;
    include: string[];
    exclude: string[];
};
export declare type GatsbyNode = {
    url: string;
    path?: string;
    value?: string | null;
    internal: {
        type: string;
    };
    parent: string;
    dir?: string;
    absolutePath: string;
    fileAbsolutePath: string;
    frontmatter?: object;
};
export declare type HtmlNode = {
    value: string;
} & GatsbyNode;
declare const plugin: ({ files, markdownNode, markdownAST, getNode }: GatsbyNodePluginArgs, pluginOptions: PluginOptions) => Promise<void>;
declare const fmImagesToRelative: (node: GatsbyNode, getNodes: () => GatsbyNode[], _options: FrontMatterOptions) => void;
export default plugin;
export { fmImagesToRelative };
