{"version":3,"sources":["webpack:///./node_modules/refractor/lang/xeora.js"],"names":["xeora","Prism","languages","extend","constant","pattern","inside","punctuation","variable","operator","alias","tag","attribute","insertBefore","xeoracube","module","exports","displayName","aliases"],"mappings":"6FAMA,SAASA,EAAMC,IAGb,SAAWA,GACTA,EAAMC,UAAUF,MAAQC,EAAMC,UAAUC,OAAO,SAAU,CACvDC,SAAU,CACRC,QAAS,4CACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,QAIfG,SAAU,CACRH,QAAS,+BACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,QAEXI,SAAU,CACRJ,QAAS,kBAIf,kBAAmB,CACjBA,QAAS,0GACTC,OAAQ,CACNE,SAAU,CACRH,QAAS,mCACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,SAEXI,SAAU,CACRJ,QAAS,kBAIfE,YAAa,CACXF,QAAS,mBAGbK,MAAO,YAET,iBAAkB,CAChBL,QAAS,gHACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,eAGbK,MAAO,YAET,mBAAoB,CAClBL,QAAS,8CACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,iCACTC,OAAQ,CACNK,IAAK,CACHN,QAAS,UAKjBK,MAAO,YAET,uBAAwB,CACtBL,QAAS,8DACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,iCACTC,OAAQ,CACNK,IAAK,CACHN,QAAS,SAIfO,UAAW,CACTP,QAAS,WACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,MAGbK,MAAO,YAGXA,MAAO,YAET,4BAA6B,CAC3BL,QAAS,cACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,UAGbK,MAAO,YAET,wBAAyB,CACvBL,QAAS,cACTC,OAAQ,CACNC,YAAa,CACXF,QAAS,WAGbK,MAAO,cAGXT,EAAMC,UAAUW,aAAa,SAAU,cAAe,CACpDL,SAAUP,EAAMC,UAAUF,MAAM,mBAAmBM,OAAiB,UACnEL,EAAMC,UAAUF,MAAM,mBACzBC,EAAMC,UAAUY,UAAYb,EAAMC,UAAUF,MA7G9C,CA8GGC,GArHLc,EAAOC,QAAUhB,EACjBA,EAAMiB,YAAc,QACpBjB,EAAMkB,QAAU,CAAC","file":"react-syntax-highlighter_languages_refractor_xeora-8bdcdab598537da194b5.js","sourcesContent":["'use strict';\n\nmodule.exports = xeora;\nxeora.displayName = 'xeora';\nxeora.aliases = ['xeoracube'];\n\nfunction xeora(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern: /\\$XF:{[-\\w.]+\\?[-\\w.]+(?:,(?:\\|?(?:[-#.^+*~]*(?:[\\w+][^$]*)|=(?:[\\S+][^$]*)|@[-#]*(?:\\w+.)[\\w+.]+)?)*)?}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern: /\\$\\w+:{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+])?:[-\\w.]+:{(![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /}:[-\\w.]+:{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    });\n    Prism.languages.insertBefore('inside', 'punctuation', {\n      variable: Prism.languages.xeora['function-inline'].inside['variable']\n    }, Prism.languages.xeora['function-block']);\n    Prism.languages.xeoracube = Prism.languages.xeora;\n  })(Prism);\n}"],"sourceRoot":""}